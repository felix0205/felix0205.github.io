<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on Matrix</title>
    <link>https://virtual-matrix.github.io/tags/spring/</link>
    <description>Recent content in Spring on Matrix</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 May 2023 21:08:19 +0800</lastBuildDate><atom:link href="https://virtual-matrix.github.io/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring单元测试中的依赖注入问题</title>
      <link>https://virtual-matrix.github.io/posts/spring/%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98/spring-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%97%B6%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 10 May 2023 21:08:19 +0800</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/spring/%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98/spring-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%97%B6%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</guid>
      <description>场景 项目中涉及到调用第三方服务接口的逻辑，而且会有一些衍生项目，也需要调用相同的接口，所以，提出了一个公共包，将调用逻辑封装到公共包中。但是调用接口逻辑中使用了Spring提供的一些模版工具，例如RedisTemplate，RestTemplate。在公共包中实现单元测试时，通过依赖注入的模版工具属性会报空指针异常等一系列问题。
问题一 使用原生junit test测试，由于没用启动动spring容器，如果类中有通过spring 依赖注入的属性，会报空指针。
解决方案 在测试类上增加***@SpringBootTest***，***@RunWith(SpringJUnit4ClassRunner.class)***注解
使用spring 容器的方式启动测试
@Slf4j @SpringBootTest @RunWith(SpringJUnit4ClassRunner.class) class DemoTest { } 问题二 按照上一个问题解决方案增加***@SpringBootTest***后，测试启动还是失败，异常如下：
java.lang.IllegalStateException: Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes=...) with your test at org.springframework.util.Assert.state(Assert.java:73) at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:233) 由于本项目为公共包项目，没有配置项目启动类，所以使用***@SpringBootTest***时，测试启动时会失败。
解决方案 创建配置类，并设置组建扫描注解
@ComponentScan(basePackages = {&amp;#34;com.demo&amp;#34;}) @Configuration public class ApplicationConfig { } 在当前测试类的***@SpringBootTest***注解中，指定classes属性
@SpringBootTest(classes = {ApplicationConfig.class}) 在配置里ApplicationConfig中创建需要的TemplateBean
@Bean public RedisConnectionFactory redisConnectionFactory() { // 创建一个单点的redis配置 RedisStandaloneConfiguration redisStandaloneConfiguration = new RedisStandaloneConfiguration(REDIS_HOST_NAME, REDIS_PORT); redisStandaloneConfiguration.setPassword(REDIS_PASSWORD); // 创建一个客户端构造器 LettucePoolingClientConfiguration.</description>
    </item>
    
  </channel>
</rss>
