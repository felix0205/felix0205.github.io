<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Matrix</title>
    <link>https://virtual-matrix.github.io/posts/</link>
    <description>Recent content in Posts on Matrix</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://virtual-matrix.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>es数据占满磁盘空间清理过程</title>
      <link>https://virtual-matrix.github.io/posts/es/es%E6%95%B0%E6%8D%AE%E5%8D%A0%E6%BB%A1%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E6%B8%85%E7%90%86%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/es/es%E6%95%B0%E6%8D%AE%E5%8D%A0%E6%BB%A1%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E6%B8%85%E7%90%86%E8%BF%87%E7%A8%8B/</guid>
      <description>背景 在一个项目中，通过metricbeat采集系统指标到es，在es中会按天建索引，由于在项目页面上只会显示近几个小时的监控数据，所以历史的数据会使用定时</description>
    </item>
    
    <item>
      <title>Centos7.9编译openjdk21</title>
      <link>https://virtual-matrix.github.io/posts/java%E8%99%9A%E6%8B%9F%E6%9C%BA/centos7.9%E7%BC%96%E8%AF%91openjdk21/</link>
      <pubDate>Wed, 02 Aug 2023 13:41:06 +0800</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/java%E8%99%9A%E6%8B%9F%E6%9C%BA/centos7.9%E7%BC%96%E8%AF%91openjdk21/</guid>
      <description>“想要窥探Java虚拟机内部的实现原理，最直接的一条路径就是编译一套自己的JDK，通过阅读和 跟踪调试JDK源码来了解Java技术体系的运作，虽然这样门槛会</description>
    </item>
    
    <item>
      <title>Java垃圾回收#1:哪些对象需要被回收</title>
      <link>https://virtual-matrix.github.io/posts/java%E8%99%9A%E6%8B%9F%E6%9C%BA/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/1%E5%93%AA%E4%BA%9B%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/java%E8%99%9A%E6%8B%9F%E6%9C%BA/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/1%E5%93%AA%E4%BA%9B%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%9B%9E%E6%94%B6/</guid>
      <description>哪些对象需要被回收？ 在堆里面存放着Java世界中几乎所有的对象实例，垃圾收集器在对堆进行回收前，第一件事情就是要确定这些对象之中哪些还“存活”着，哪些已经</description>
    </item>
    
    <item>
      <title>Java垃圾回收#2:垃圾收集算法</title>
      <link>https://virtual-matrix.github.io/posts/java%E8%99%9A%E6%8B%9F%E6%9C%BA/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/2%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/java%E8%99%9A%E6%8B%9F%E6%9C%BA/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/2%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95/</guid>
      <description>分代收集理论 当前商业虚拟机的垃圾收集器，大多数都遵循了“分代收集”（Generational Collection）的理论进行设计，分代收集名为理论，实质是</description>
    </item>
    
    <item>
      <title>Spring单元测试中的依赖注入问题</title>
      <link>https://virtual-matrix.github.io/posts/spring/%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98/spring-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%97%B6%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 10 May 2023 21:08:19 +0800</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/spring/%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98/spring-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%97%B6%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</guid>
      <description>场景 项目中涉及到调用第三方服务接口的逻辑，而且会有一些衍生项目，也需要调用相同的接口，所以，提出了一个公共包，将调用逻辑封装到公共包中。但是调用接口逻辑中</description>
    </item>
    
    <item>
      <title>Arthas 简单使用</title>
      <link>https://virtual-matrix.github.io/posts/arthas/arthas%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</link>
      <pubDate>Tue, 09 May 2023 19:44:17 +0800</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/arthas/arthas%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</guid>
      <description>什么是Arthas Arthas是阿里巴巴开源的一款线上监控诊断产品，能够实时查看应用加载、内存、垃圾收集、线程等信息。可以在不修改代码的情况下，对线上应用</description>
    </item>
    
    <item>
      <title>Reactor#1:Reactor介绍</title>
      <link>https://virtual-matrix.github.io/posts/reactor%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%8B%E7%BB%8D/1reactor%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 22 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/reactor%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%8B%E7%BB%8D/1reactor%E4%BB%8B%E7%BB%8D/</guid>
      <description>Reactor是什么？ Reactor 框架是 Pivotal 公司开发的，实现了 Reactive Programming 思想，符合 Reactive Streams 规范（Reactive Streams 是由 Netflix、TypeSafe、Pivotal 等公司发起</description>
    </item>
    
    <item>
      <title>Reactor#2:Reactor的历史</title>
      <link>https://virtual-matrix.github.io/posts/reactor%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%8B%E7%BB%8D/2reactor%E5%8E%86%E5%8F%B2/</link>
      <pubDate>Sun, 22 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/reactor%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%8B%E7%BB%8D/2reactor%E5%8E%86%E5%8F%B2/</guid>
      <description>背景：响应式编程 响应式编程（Reactive Programming）是一种新的编程范式，中文称响应式（或反应式）编程，是一种高性能应用的编程方式。其最早是</description>
    </item>
    
    <item>
      <title>Reactor#3:资料收集</title>
      <link>https://virtual-matrix.github.io/posts/reactor%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%8B%E7%BB%8D/3%E8%B5%84%E6%96%99%E6%94%B6%E9%9B%86/</link>
      <pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/reactor%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%8B%E7%BB%8D/3%E8%B5%84%E6%96%99%E6%94%B6%E9%9B%86/</guid>
      <description>官方资料 Reactor项目官网 Reactor官方文档 Reactor Code Reference Reactor orgnization @ github Reactor-core仓库 官方提供的学习和练习资料 Lite Rx API Hands-on: 动手练习项目 Head-First Reactive Workshop 社区资料 学</description>
    </item>
    
    <item>
      <title>docker-compose 部署 es集群</title>
      <link>https://virtual-matrix.github.io/posts/docker/docker-compose%E9%83%A8%E7%BD%B2es%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Tue, 08 Dec 2020 13:41:06 +0800</pubDate>
      
      <guid>https://virtual-matrix.github.io/posts/docker/docker-compose%E9%83%A8%E7%BD%B2es%E9%9B%86%E7%BE%A4/</guid>
      <description>为了方便学习elasticsearch，通过docker compose快速搭建环境。没有安装docker和docker compose的小伙伴可以先看关于d</description>
    </item>
    
  </channel>
</rss>
